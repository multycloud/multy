// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: api/proto/resourcespb/virtual_machine.proto

package resourcespb

import (
	commonpb "github.com/multycloud/multy/api/proto/commonpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImageReference_OperatingSystemDistribution int32

const (
	ImageReference_UNKNOWN ImageReference_OperatingSystemDistribution = 0
	ImageReference_UBUNTU  ImageReference_OperatingSystemDistribution = 1
	ImageReference_DEBIAN  ImageReference_OperatingSystemDistribution = 2
	ImageReference_CENT_OS ImageReference_OperatingSystemDistribution = 3
)

// Enum value maps for ImageReference_OperatingSystemDistribution.
var (
	ImageReference_OperatingSystemDistribution_name = map[int32]string{
		0: "UNKNOWN",
		1: "UBUNTU",
		2: "DEBIAN",
		3: "CENT_OS",
	}
	ImageReference_OperatingSystemDistribution_value = map[string]int32{
		"UNKNOWN": 0,
		"UBUNTU":  1,
		"DEBIAN":  2,
		"CENT_OS": 3,
	}
)

func (x ImageReference_OperatingSystemDistribution) Enum() *ImageReference_OperatingSystemDistribution {
	p := new(ImageReference_OperatingSystemDistribution)
	*p = x
	return p
}

func (x ImageReference_OperatingSystemDistribution) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageReference_OperatingSystemDistribution) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_resourcespb_virtual_machine_proto_enumTypes[0].Descriptor()
}

func (ImageReference_OperatingSystemDistribution) Type() protoreflect.EnumType {
	return &file_api_proto_resourcespb_virtual_machine_proto_enumTypes[0]
}

func (x ImageReference_OperatingSystemDistribution) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageReference_OperatingSystemDistribution.Descriptor instead.
func (ImageReference_OperatingSystemDistribution) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_resourcespb_virtual_machine_proto_rawDescGZIP(), []int{0, 0}
}

type ImageReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Os      ImageReference_OperatingSystemDistribution `protobuf:"varint,1,opt,name=os,proto3,enum=dev.multy.resources.ImageReference_OperatingSystemDistribution" json:"os,omitempty"`
	Version string                                     `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ImageReference) Reset() {
	*x = ImageReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageReference) ProtoMessage() {}

func (x *ImageReference) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageReference.ProtoReflect.Descriptor instead.
func (*ImageReference) Descriptor() ([]byte, []int) {
	return file_api_proto_resourcespb_virtual_machine_proto_rawDescGZIP(), []int{0}
}

func (x *ImageReference) GetOs() ImageReference_OperatingSystemDistribution {
	if x != nil {
		return x.Os
	}
	return ImageReference_UNKNOWN
}

func (x *ImageReference) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type CreateVirtualMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *VirtualMachineArgs `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *CreateVirtualMachineRequest) Reset() {
	*x = CreateVirtualMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVirtualMachineRequest) ProtoMessage() {}

func (x *CreateVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVirtualMachineRequest.ProtoReflect.Descriptor instead.
func (*CreateVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_resourcespb_virtual_machine_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVirtualMachineRequest) GetResource() *VirtualMachineArgs {
	if x != nil {
		return x.Resource
	}
	return nil
}

type ReadVirtualMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *ReadVirtualMachineRequest) Reset() {
	*x = ReadVirtualMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadVirtualMachineRequest) ProtoMessage() {}

func (x *ReadVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadVirtualMachineRequest.ProtoReflect.Descriptor instead.
func (*ReadVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_resourcespb_virtual_machine_proto_rawDescGZIP(), []int{2}
}

func (x *ReadVirtualMachineRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type UpdateVirtualMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string              `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Resource   *VirtualMachineArgs `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *UpdateVirtualMachineRequest) Reset() {
	*x = UpdateVirtualMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVirtualMachineRequest) ProtoMessage() {}

func (x *UpdateVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVirtualMachineRequest.ProtoReflect.Descriptor instead.
func (*UpdateVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_resourcespb_virtual_machine_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateVirtualMachineRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *UpdateVirtualMachineRequest) GetResource() *VirtualMachineArgs {
	if x != nil {
		return x.Resource
	}
	return nil
}

type DeleteVirtualMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *DeleteVirtualMachineRequest) Reset() {
	*x = DeleteVirtualMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVirtualMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVirtualMachineRequest) ProtoMessage() {}

func (x *DeleteVirtualMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVirtualMachineRequest.ProtoReflect.Descriptor instead.
func (*DeleteVirtualMachineRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_resourcespb_virtual_machine_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteVirtualMachineRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type VirtualMachineAwsOverride struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceType string `protobuf:"bytes,1,opt,name=instance_type,json=instanceType,proto3" json:"instance_type,omitempty"`
}

func (x *VirtualMachineAwsOverride) Reset() {
	*x = VirtualMachineAwsOverride{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualMachineAwsOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineAwsOverride) ProtoMessage() {}

func (x *VirtualMachineAwsOverride) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineAwsOverride.ProtoReflect.Descriptor instead.
func (*VirtualMachineAwsOverride) Descriptor() ([]byte, []int) {
	return file_api_proto_resourcespb_virtual_machine_proto_rawDescGZIP(), []int{5}
}

func (x *VirtualMachineAwsOverride) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

type VirtualMachineAzureOverride struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size string `protobuf:"bytes,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *VirtualMachineAzureOverride) Reset() {
	*x = VirtualMachineAzureOverride{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualMachineAzureOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineAzureOverride) ProtoMessage() {}

func (x *VirtualMachineAzureOverride) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineAzureOverride.ProtoReflect.Descriptor instead.
func (*VirtualMachineAzureOverride) Descriptor() ([]byte, []int) {
	return file_api_proto_resourcespb_virtual_machine_proto_rawDescGZIP(), []int{6}
}

func (x *VirtualMachineAzureOverride) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

type VirtualMachineGcpOverride struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project     string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	MachineType string `protobuf:"bytes,2,opt,name=machine_type,json=machineType,proto3" json:"machine_type,omitempty"`
}

func (x *VirtualMachineGcpOverride) Reset() {
	*x = VirtualMachineGcpOverride{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualMachineGcpOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineGcpOverride) ProtoMessage() {}

func (x *VirtualMachineGcpOverride) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineGcpOverride.ProtoReflect.Descriptor instead.
func (*VirtualMachineGcpOverride) Descriptor() ([]byte, []int) {
	return file_api_proto_resourcespb_virtual_machine_proto_rawDescGZIP(), []int{7}
}

func (x *VirtualMachineGcpOverride) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *VirtualMachineGcpOverride) GetMachineType() string {
	if x != nil {
		return x.MachineType
	}
	return ""
}

type VirtualMachineArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonParameters        *commonpb.ResourceCommonArgs `protobuf:"bytes,1,opt,name=common_parameters,json=commonParameters,proto3" json:"common_parameters,omitempty"`
	Name                    string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NetworkInterfaceIds     []string                     `protobuf:"bytes,4,rep,name=network_interface_ids,json=networkInterfaceIds,proto3" json:"network_interface_ids,omitempty"`
	NetworkSecurityGroupIds []string                     `protobuf:"bytes,5,rep,name=network_security_group_ids,json=networkSecurityGroupIds,proto3" json:"network_security_group_ids,omitempty"`
	VmSize                  commonpb.VmSize_Enum         `protobuf:"varint,6,opt,name=vm_size,json=vmSize,proto3,enum=dev.multy.common.VmSize_Enum" json:"vm_size,omitempty"`
	UserDataBase64          string                       `protobuf:"bytes,7,opt,name=user_data_base64,json=userDataBase64,proto3" json:"user_data_base64,omitempty"`
	SubnetId                string                       `protobuf:"bytes,8,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	PublicSshKey            string                       `protobuf:"bytes,9,opt,name=public_ssh_key,json=publicSshKey,proto3" json:"public_ssh_key,omitempty"`
	PublicIpId              string                       `protobuf:"bytes,10,opt,name=public_ip_id,json=publicIpId,proto3" json:"public_ip_id,omitempty"`
	GeneratePublicIp        bool                         `protobuf:"varint,11,opt,name=generate_public_ip,json=generatePublicIp,proto3" json:"generate_public_ip,omitempty"`
	ImageReference          *ImageReference              `protobuf:"bytes,12,opt,name=image_reference,json=imageReference,proto3" json:"image_reference,omitempty"`
	AwsOverride             *VirtualMachineAwsOverride   `protobuf:"bytes,13,opt,name=aws_override,json=awsOverride,proto3" json:"aws_override,omitempty"`
	AzureOverride           *VirtualMachineAzureOverride `protobuf:"bytes,14,opt,name=azure_override,json=azureOverride,proto3" json:"azure_override,omitempty"`
	GcpOverride             *VirtualMachineGcpOverride   `protobuf:"bytes,15,opt,name=gcp_override,json=gcpOverride,proto3" json:"gcp_override,omitempty"`
	AvailabilityZone        int32                        `protobuf:"varint,16,opt,name=availability_zone,json=availabilityZone,proto3" json:"availability_zone,omitempty"`
}

func (x *VirtualMachineArgs) Reset() {
	*x = VirtualMachineArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualMachineArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineArgs) ProtoMessage() {}

func (x *VirtualMachineArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineArgs.ProtoReflect.Descriptor instead.
func (*VirtualMachineArgs) Descriptor() ([]byte, []int) {
	return file_api_proto_resourcespb_virtual_machine_proto_rawDescGZIP(), []int{8}
}

func (x *VirtualMachineArgs) GetCommonParameters() *commonpb.ResourceCommonArgs {
	if x != nil {
		return x.CommonParameters
	}
	return nil
}

func (x *VirtualMachineArgs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VirtualMachineArgs) GetNetworkInterfaceIds() []string {
	if x != nil {
		return x.NetworkInterfaceIds
	}
	return nil
}

func (x *VirtualMachineArgs) GetNetworkSecurityGroupIds() []string {
	if x != nil {
		return x.NetworkSecurityGroupIds
	}
	return nil
}

func (x *VirtualMachineArgs) GetVmSize() commonpb.VmSize_Enum {
	if x != nil {
		return x.VmSize
	}
	return commonpb.VmSize_Enum(0)
}

func (x *VirtualMachineArgs) GetUserDataBase64() string {
	if x != nil {
		return x.UserDataBase64
	}
	return ""
}

func (x *VirtualMachineArgs) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *VirtualMachineArgs) GetPublicSshKey() string {
	if x != nil {
		return x.PublicSshKey
	}
	return ""
}

func (x *VirtualMachineArgs) GetPublicIpId() string {
	if x != nil {
		return x.PublicIpId
	}
	return ""
}

func (x *VirtualMachineArgs) GetGeneratePublicIp() bool {
	if x != nil {
		return x.GeneratePublicIp
	}
	return false
}

func (x *VirtualMachineArgs) GetImageReference() *ImageReference {
	if x != nil {
		return x.ImageReference
	}
	return nil
}

func (x *VirtualMachineArgs) GetAwsOverride() *VirtualMachineAwsOverride {
	if x != nil {
		return x.AwsOverride
	}
	return nil
}

func (x *VirtualMachineArgs) GetAzureOverride() *VirtualMachineAzureOverride {
	if x != nil {
		return x.AzureOverride
	}
	return nil
}

func (x *VirtualMachineArgs) GetGcpOverride() *VirtualMachineGcpOverride {
	if x != nil {
		return x.GcpOverride
	}
	return nil
}

func (x *VirtualMachineArgs) GetAvailabilityZone() int32 {
	if x != nil {
		return x.AvailabilityZone
	}
	return 0
}

type VirtualMachineAwsOutputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ec2InstanceId         string `protobuf:"bytes,1,opt,name=ec2_instance_id,json=ec2InstanceId,proto3" json:"ec2_instance_id,omitempty"`
	IamInstanceProfileArn string `protobuf:"bytes,2,opt,name=iam_instance_profile_arn,json=iamInstanceProfileArn,proto3" json:"iam_instance_profile_arn,omitempty"`
	IamRoleArn            string `protobuf:"bytes,3,opt,name=iam_role_arn,json=iamRoleArn,proto3" json:"iam_role_arn,omitempty"`
	KeyPairArn            string `protobuf:"bytes,4,opt,name=key_pair_arn,json=keyPairArn,proto3" json:"key_pair_arn,omitempty"`
}

func (x *VirtualMachineAwsOutputs) Reset() {
	*x = VirtualMachineAwsOutputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualMachineAwsOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineAwsOutputs) ProtoMessage() {}

func (x *VirtualMachineAwsOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineAwsOutputs.ProtoReflect.Descriptor instead.
func (*VirtualMachineAwsOutputs) Descriptor() ([]byte, []int) {
	return file_api_proto_resourcespb_virtual_machine_proto_rawDescGZIP(), []int{9}
}

func (x *VirtualMachineAwsOutputs) GetEc2InstanceId() string {
	if x != nil {
		return x.Ec2InstanceId
	}
	return ""
}

func (x *VirtualMachineAwsOutputs) GetIamInstanceProfileArn() string {
	if x != nil {
		return x.IamInstanceProfileArn
	}
	return ""
}

func (x *VirtualMachineAwsOutputs) GetIamRoleArn() string {
	if x != nil {
		return x.IamRoleArn
	}
	return ""
}

func (x *VirtualMachineAwsOutputs) GetKeyPairArn() string {
	if x != nil {
		return x.KeyPairArn
	}
	return ""
}

type VirtualMachineAzureOutputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualMachineId   string `protobuf:"bytes,1,opt,name=virtual_machine_id,json=virtualMachineId,proto3" json:"virtual_machine_id,omitempty"`
	NetworkInterfaceId string `protobuf:"bytes,2,opt,name=network_interface_id,json=networkInterfaceId,proto3" json:"network_interface_id,omitempty"`
	PublicIpId         string `protobuf:"bytes,3,opt,name=public_ip_id,json=publicIpId,proto3" json:"public_ip_id,omitempty"`
}

func (x *VirtualMachineAzureOutputs) Reset() {
	*x = VirtualMachineAzureOutputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualMachineAzureOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineAzureOutputs) ProtoMessage() {}

func (x *VirtualMachineAzureOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineAzureOutputs.ProtoReflect.Descriptor instead.
func (*VirtualMachineAzureOutputs) Descriptor() ([]byte, []int) {
	return file_api_proto_resourcespb_virtual_machine_proto_rawDescGZIP(), []int{10}
}

func (x *VirtualMachineAzureOutputs) GetVirtualMachineId() string {
	if x != nil {
		return x.VirtualMachineId
	}
	return ""
}

func (x *VirtualMachineAzureOutputs) GetNetworkInterfaceId() string {
	if x != nil {
		return x.NetworkInterfaceId
	}
	return ""
}

func (x *VirtualMachineAzureOutputs) GetPublicIpId() string {
	if x != nil {
		return x.PublicIpId
	}
	return ""
}

type VirtualMachineGcpOutputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComputeInstanceId   string `protobuf:"bytes,1,opt,name=compute_instance_id,json=computeInstanceId,proto3" json:"compute_instance_id,omitempty"`
	ServiceAccountEmail string `protobuf:"bytes,2,opt,name=service_account_email,json=serviceAccountEmail,proto3" json:"service_account_email,omitempty"`
}

func (x *VirtualMachineGcpOutputs) Reset() {
	*x = VirtualMachineGcpOutputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualMachineGcpOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineGcpOutputs) ProtoMessage() {}

func (x *VirtualMachineGcpOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineGcpOutputs.ProtoReflect.Descriptor instead.
func (*VirtualMachineGcpOutputs) Descriptor() ([]byte, []int) {
	return file_api_proto_resourcespb_virtual_machine_proto_rawDescGZIP(), []int{11}
}

func (x *VirtualMachineGcpOutputs) GetComputeInstanceId() string {
	if x != nil {
		return x.ComputeInstanceId
	}
	return ""
}

func (x *VirtualMachineGcpOutputs) GetServiceAccountEmail() string {
	if x != nil {
		return x.ServiceAccountEmail
	}
	return ""
}

type VirtualMachineResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonParameters        *commonpb.CommonResourceParameters `protobuf:"bytes,1,opt,name=common_parameters,json=commonParameters,proto3" json:"common_parameters,omitempty"`
	Name                    string                             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NetworkInterfaceIds     []string                           `protobuf:"bytes,4,rep,name=network_interface_ids,json=networkInterfaceIds,proto3" json:"network_interface_ids,omitempty"`
	NetworkSecurityGroupIds []string                           `protobuf:"bytes,5,rep,name=network_security_group_ids,json=networkSecurityGroupIds,proto3" json:"network_security_group_ids,omitempty"`
	VmSize                  commonpb.VmSize_Enum               `protobuf:"varint,6,opt,name=vm_size,json=vmSize,proto3,enum=dev.multy.common.VmSize_Enum" json:"vm_size,omitempty"`
	UserDataBase64          string                             `protobuf:"bytes,7,opt,name=user_data_base64,json=userDataBase64,proto3" json:"user_data_base64,omitempty"`
	SubnetId                string                             `protobuf:"bytes,8,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	PublicSshKey            string                             `protobuf:"bytes,9,opt,name=public_ssh_key,json=publicSshKey,proto3" json:"public_ssh_key,omitempty"`
	PublicIpId              string                             `protobuf:"bytes,10,opt,name=public_ip_id,json=publicIpId,proto3" json:"public_ip_id,omitempty"`
	GeneratePublicIp        bool                               `protobuf:"varint,11,opt,name=generate_public_ip,json=generatePublicIp,proto3" json:"generate_public_ip,omitempty"`
	ImageReference          *ImageReference                    `protobuf:"bytes,14,opt,name=image_reference,json=imageReference,proto3" json:"image_reference,omitempty"`
	AwsOverride             *VirtualMachineAwsOverride         `protobuf:"bytes,15,opt,name=aws_override,json=awsOverride,proto3" json:"aws_override,omitempty"`
	AzureOverride           *VirtualMachineAzureOverride       `protobuf:"bytes,16,opt,name=azure_override,json=azureOverride,proto3" json:"azure_override,omitempty"`
	GcpOverride             *VirtualMachineGcpOverride         `protobuf:"bytes,17,opt,name=gcp_override,json=gcpOverride,proto3" json:"gcp_override,omitempty"`
	AvailabilityZone        int32                              `protobuf:"varint,18,opt,name=availability_zone,json=availabilityZone,proto3" json:"availability_zone,omitempty"`
	// outputs
	PublicIp     string                      `protobuf:"bytes,12,opt,name=public_ip,json=publicIp,proto3" json:"public_ip,omitempty"`
	IdentityId   string                      `protobuf:"bytes,13,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	AwsOutputs   *VirtualMachineAwsOutputs   `protobuf:"bytes,19,opt,name=aws_outputs,json=awsOutputs,proto3" json:"aws_outputs,omitempty"`
	AzureOutputs *VirtualMachineAzureOutputs `protobuf:"bytes,20,opt,name=azure_outputs,json=azureOutputs,proto3" json:"azure_outputs,omitempty"`
	GcpOutputs   *VirtualMachineGcpOutputs   `protobuf:"bytes,21,opt,name=gcp_outputs,json=gcpOutputs,proto3" json:"gcp_outputs,omitempty"`
}

func (x *VirtualMachineResource) Reset() {
	*x = VirtualMachineResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualMachineResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineResource) ProtoMessage() {}

func (x *VirtualMachineResource) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resourcespb_virtual_machine_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineResource.ProtoReflect.Descriptor instead.
func (*VirtualMachineResource) Descriptor() ([]byte, []int) {
	return file_api_proto_resourcespb_virtual_machine_proto_rawDescGZIP(), []int{12}
}

func (x *VirtualMachineResource) GetCommonParameters() *commonpb.CommonResourceParameters {
	if x != nil {
		return x.CommonParameters
	}
	return nil
}

func (x *VirtualMachineResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VirtualMachineResource) GetNetworkInterfaceIds() []string {
	if x != nil {
		return x.NetworkInterfaceIds
	}
	return nil
}

func (x *VirtualMachineResource) GetNetworkSecurityGroupIds() []string {
	if x != nil {
		return x.NetworkSecurityGroupIds
	}
	return nil
}

func (x *VirtualMachineResource) GetVmSize() commonpb.VmSize_Enum {
	if x != nil {
		return x.VmSize
	}
	return commonpb.VmSize_Enum(0)
}

func (x *VirtualMachineResource) GetUserDataBase64() string {
	if x != nil {
		return x.UserDataBase64
	}
	return ""
}

func (x *VirtualMachineResource) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *VirtualMachineResource) GetPublicSshKey() string {
	if x != nil {
		return x.PublicSshKey
	}
	return ""
}

func (x *VirtualMachineResource) GetPublicIpId() string {
	if x != nil {
		return x.PublicIpId
	}
	return ""
}

func (x *VirtualMachineResource) GetGeneratePublicIp() bool {
	if x != nil {
		return x.GeneratePublicIp
	}
	return false
}

func (x *VirtualMachineResource) GetImageReference() *ImageReference {
	if x != nil {
		return x.ImageReference
	}
	return nil
}

func (x *VirtualMachineResource) GetAwsOverride() *VirtualMachineAwsOverride {
	if x != nil {
		return x.AwsOverride
	}
	return nil
}

func (x *VirtualMachineResource) GetAzureOverride() *VirtualMachineAzureOverride {
	if x != nil {
		return x.AzureOverride
	}
	return nil
}

func (x *VirtualMachineResource) GetGcpOverride() *VirtualMachineGcpOverride {
	if x != nil {
		return x.GcpOverride
	}
	return nil
}

func (x *VirtualMachineResource) GetAvailabilityZone() int32 {
	if x != nil {
		return x.AvailabilityZone
	}
	return 0
}

func (x *VirtualMachineResource) GetPublicIp() string {
	if x != nil {
		return x.PublicIp
	}
	return ""
}

func (x *VirtualMachineResource) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *VirtualMachineResource) GetAwsOutputs() *VirtualMachineAwsOutputs {
	if x != nil {
		return x.AwsOutputs
	}
	return nil
}

func (x *VirtualMachineResource) GetAzureOutputs() *VirtualMachineAzureOutputs {
	if x != nil {
		return x.AzureOutputs
	}
	return nil
}

func (x *VirtualMachineResource) GetGcpOutputs() *VirtualMachineGcpOutputs {
	if x != nil {
		return x.GcpOutputs
	}
	return nil
}

var File_api_proto_resourcespb_virtual_machine_proto protoreflect.FileDescriptor

var file_api_proto_resourcespb_virtual_machine_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x70, 0x62, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x64,
	0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x1a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x01, 0x0a, 0x0e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x4f, 0x0a, 0x1b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x55, 0x42, 0x55, 0x4e, 0x54, 0x55, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x42,
	0x49, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x53,
	0x10, 0x03, 0x22, 0x62, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x43, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x72, 0x67, 0x73, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x3c, 0x0a, 0x19, 0x52, 0x65, 0x61, 0x64, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75,
	0x6c, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x72, 0x67, 0x73,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x3e, 0x0a, 0x1b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x19, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x77, 0x73, 0x4f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x31, 0x0a, 0x1b,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x7a,
	0x75, 0x72, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0x58, 0x0a, 0x19, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x47, 0x63, 0x70, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xdb, 0x06, 0x0a, 0x12, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x51, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x65,
	0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x72, 0x67,
	0x73, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x1a, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x17, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x76, 0x6d, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6d, 0x53,
	0x69, 0x7a, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x76, 0x6d, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x36, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x73, 0x73, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x73, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a,
	0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x70, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x70, 0x12, 0x4c, 0x0a,
	0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c,
	0x74, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x61,
	0x77, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x77, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x52, 0x0b, 0x61, 0x77, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x57,
	0x0a, 0x0e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c,
	0x74, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x7a, 0x75, 0x72, 0x65,
	0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x0d, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x4f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x67, 0x63, 0x70, 0x5f, 0x6f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x47, 0x63, 0x70, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x0b, 0x67,
	0x63, 0x70, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x18, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x77, 0x73, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x63, 0x32, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65,
	0x63, 0x32, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x18,
	0x69, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x69, 0x61, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x41, 0x72, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x61, 0x6d, 0x5f, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x61, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x61, 0x6d,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x72, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x6b, 0x65, 0x79, 0x5f, 0x70,
	0x61, 0x69, 0x72, 0x5f, 0x61, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6b,
	0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x41, 0x72, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x1a, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x7a, 0x75, 0x72,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x70, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x18, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x47, 0x63, 0x70, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x99, 0x09, 0x0a, 0x16, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x10, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x13, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x1a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x17, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x76, 0x6d, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x2e, 0x45,
	0x6e, 0x75, 0x6d, 0x52, 0x06, 0x76, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x73, 0x73, 0x68,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x53, 0x73, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x70, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x70,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x70, 0x12, 0x4c, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x61, 0x77, 0x73, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x41, 0x77, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x0b, 0x61, 0x77,
	0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x61, 0x7a, 0x75,
	0x72, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x52, 0x0d, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x67, 0x63, 0x70, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d,
	0x75, 0x6c, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x47, 0x63, 0x70,
	0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x0b, 0x67, 0x63, 0x70, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5a, 0x6f,
	0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x70, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x70, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x4e, 0x0a, 0x0b, 0x61, 0x77, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74,
	0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x77, 0x73, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x52, 0x0a, 0x61, 0x77, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73,
	0x12, 0x54, 0x0a, 0x0d, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75,
	0x6c, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x7a, 0x75, 0x72,
	0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x52, 0x0c, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x4e, 0x0a, 0x0b, 0x67, 0x63, 0x70, 0x5f, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x65,
	0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x47, 0x63, 0x70, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x52, 0x0a, 0x67, 0x63, 0x70, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x42, 0x5e, 0x0a, 0x17, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75,
	0x6c, 0x74, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x42, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6d, 0x75, 0x6c, 0x74, 0x79, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x79,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_resourcespb_virtual_machine_proto_rawDescOnce sync.Once
	file_api_proto_resourcespb_virtual_machine_proto_rawDescData = file_api_proto_resourcespb_virtual_machine_proto_rawDesc
)

func file_api_proto_resourcespb_virtual_machine_proto_rawDescGZIP() []byte {
	file_api_proto_resourcespb_virtual_machine_proto_rawDescOnce.Do(func() {
		file_api_proto_resourcespb_virtual_machine_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_resourcespb_virtual_machine_proto_rawDescData)
	})
	return file_api_proto_resourcespb_virtual_machine_proto_rawDescData
}

var file_api_proto_resourcespb_virtual_machine_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_resourcespb_virtual_machine_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_proto_resourcespb_virtual_machine_proto_goTypes = []interface{}{
	(ImageReference_OperatingSystemDistribution)(0), // 0: dev.multy.resources.ImageReference.OperatingSystemDistribution
	(*ImageReference)(nil),                          // 1: dev.multy.resources.ImageReference
	(*CreateVirtualMachineRequest)(nil),             // 2: dev.multy.resources.CreateVirtualMachineRequest
	(*ReadVirtualMachineRequest)(nil),               // 3: dev.multy.resources.ReadVirtualMachineRequest
	(*UpdateVirtualMachineRequest)(nil),             // 4: dev.multy.resources.UpdateVirtualMachineRequest
	(*DeleteVirtualMachineRequest)(nil),             // 5: dev.multy.resources.DeleteVirtualMachineRequest
	(*VirtualMachineAwsOverride)(nil),               // 6: dev.multy.resources.VirtualMachineAwsOverride
	(*VirtualMachineAzureOverride)(nil),             // 7: dev.multy.resources.VirtualMachineAzureOverride
	(*VirtualMachineGcpOverride)(nil),               // 8: dev.multy.resources.VirtualMachineGcpOverride
	(*VirtualMachineArgs)(nil),                      // 9: dev.multy.resources.VirtualMachineArgs
	(*VirtualMachineAwsOutputs)(nil),                // 10: dev.multy.resources.VirtualMachineAwsOutputs
	(*VirtualMachineAzureOutputs)(nil),              // 11: dev.multy.resources.VirtualMachineAzureOutputs
	(*VirtualMachineGcpOutputs)(nil),                // 12: dev.multy.resources.VirtualMachineGcpOutputs
	(*VirtualMachineResource)(nil),                  // 13: dev.multy.resources.VirtualMachineResource
	(*commonpb.ResourceCommonArgs)(nil),             // 14: dev.multy.common.ResourceCommonArgs
	(commonpb.VmSize_Enum)(0),                       // 15: dev.multy.common.VmSize.Enum
	(*commonpb.CommonResourceParameters)(nil),       // 16: dev.multy.common.CommonResourceParameters
}
var file_api_proto_resourcespb_virtual_machine_proto_depIdxs = []int32{
	0,  // 0: dev.multy.resources.ImageReference.os:type_name -> dev.multy.resources.ImageReference.OperatingSystemDistribution
	9,  // 1: dev.multy.resources.CreateVirtualMachineRequest.resource:type_name -> dev.multy.resources.VirtualMachineArgs
	9,  // 2: dev.multy.resources.UpdateVirtualMachineRequest.resource:type_name -> dev.multy.resources.VirtualMachineArgs
	14, // 3: dev.multy.resources.VirtualMachineArgs.common_parameters:type_name -> dev.multy.common.ResourceCommonArgs
	15, // 4: dev.multy.resources.VirtualMachineArgs.vm_size:type_name -> dev.multy.common.VmSize.Enum
	1,  // 5: dev.multy.resources.VirtualMachineArgs.image_reference:type_name -> dev.multy.resources.ImageReference
	6,  // 6: dev.multy.resources.VirtualMachineArgs.aws_override:type_name -> dev.multy.resources.VirtualMachineAwsOverride
	7,  // 7: dev.multy.resources.VirtualMachineArgs.azure_override:type_name -> dev.multy.resources.VirtualMachineAzureOverride
	8,  // 8: dev.multy.resources.VirtualMachineArgs.gcp_override:type_name -> dev.multy.resources.VirtualMachineGcpOverride
	16, // 9: dev.multy.resources.VirtualMachineResource.common_parameters:type_name -> dev.multy.common.CommonResourceParameters
	15, // 10: dev.multy.resources.VirtualMachineResource.vm_size:type_name -> dev.multy.common.VmSize.Enum
	1,  // 11: dev.multy.resources.VirtualMachineResource.image_reference:type_name -> dev.multy.resources.ImageReference
	6,  // 12: dev.multy.resources.VirtualMachineResource.aws_override:type_name -> dev.multy.resources.VirtualMachineAwsOverride
	7,  // 13: dev.multy.resources.VirtualMachineResource.azure_override:type_name -> dev.multy.resources.VirtualMachineAzureOverride
	8,  // 14: dev.multy.resources.VirtualMachineResource.gcp_override:type_name -> dev.multy.resources.VirtualMachineGcpOverride
	10, // 15: dev.multy.resources.VirtualMachineResource.aws_outputs:type_name -> dev.multy.resources.VirtualMachineAwsOutputs
	11, // 16: dev.multy.resources.VirtualMachineResource.azure_outputs:type_name -> dev.multy.resources.VirtualMachineAzureOutputs
	12, // 17: dev.multy.resources.VirtualMachineResource.gcp_outputs:type_name -> dev.multy.resources.VirtualMachineGcpOutputs
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_proto_resourcespb_virtual_machine_proto_init() }
func file_api_proto_resourcespb_virtual_machine_proto_init() {
	if File_api_proto_resourcespb_virtual_machine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_resourcespb_virtual_machine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resourcespb_virtual_machine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVirtualMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resourcespb_virtual_machine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadVirtualMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resourcespb_virtual_machine_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVirtualMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resourcespb_virtual_machine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVirtualMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resourcespb_virtual_machine_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualMachineAwsOverride); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resourcespb_virtual_machine_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualMachineAzureOverride); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resourcespb_virtual_machine_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualMachineGcpOverride); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resourcespb_virtual_machine_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualMachineArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resourcespb_virtual_machine_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualMachineAwsOutputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resourcespb_virtual_machine_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualMachineAzureOutputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resourcespb_virtual_machine_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualMachineGcpOutputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resourcespb_virtual_machine_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualMachineResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_resourcespb_virtual_machine_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_resourcespb_virtual_machine_proto_goTypes,
		DependencyIndexes: file_api_proto_resourcespb_virtual_machine_proto_depIdxs,
		EnumInfos:         file_api_proto_resourcespb_virtual_machine_proto_enumTypes,
		MessageInfos:      file_api_proto_resourcespb_virtual_machine_proto_msgTypes,
	}.Build()
	File_api_proto_resourcespb_virtual_machine_proto = out.File
	file_api_proto_resourcespb_virtual_machine_proto_rawDesc = nil
	file_api_proto_resourcespb_virtual_machine_proto_goTypes = nil
	file_api_proto_resourcespb_virtual_machine_proto_depIdxs = nil
}
