// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: api/proto/resources/kubernetes_node_pool.proto

package resources

import (
	common "github.com/multycloud/multy/api/proto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateKubernetesNodePoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*CloudSpecificKubernetesNodePoolArgs `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *CreateKubernetesNodePoolRequest) Reset() {
	*x = CreateKubernetesNodePoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKubernetesNodePoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKubernetesNodePoolRequest) ProtoMessage() {}

func (x *CreateKubernetesNodePoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKubernetesNodePoolRequest.ProtoReflect.Descriptor instead.
func (*CreateKubernetesNodePoolRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_resources_kubernetes_node_pool_proto_rawDescGZIP(), []int{0}
}

func (x *CreateKubernetesNodePoolRequest) GetResources() []*CloudSpecificKubernetesNodePoolArgs {
	if x != nil {
		return x.Resources
	}
	return nil
}

type ReadKubernetesNodePoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *ReadKubernetesNodePoolRequest) Reset() {
	*x = ReadKubernetesNodePoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadKubernetesNodePoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadKubernetesNodePoolRequest) ProtoMessage() {}

func (x *ReadKubernetesNodePoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadKubernetesNodePoolRequest.ProtoReflect.Descriptor instead.
func (*ReadKubernetesNodePoolRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_resources_kubernetes_node_pool_proto_rawDescGZIP(), []int{1}
}

func (x *ReadKubernetesNodePoolRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type UpdateKubernetesNodePoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string                                 `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Resources  []*CloudSpecificKubernetesNodePoolArgs `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *UpdateKubernetesNodePoolRequest) Reset() {
	*x = UpdateKubernetesNodePoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateKubernetesNodePoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateKubernetesNodePoolRequest) ProtoMessage() {}

func (x *UpdateKubernetesNodePoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateKubernetesNodePoolRequest.ProtoReflect.Descriptor instead.
func (*UpdateKubernetesNodePoolRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_resources_kubernetes_node_pool_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateKubernetesNodePoolRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *UpdateKubernetesNodePoolRequest) GetResources() []*CloudSpecificKubernetesNodePoolArgs {
	if x != nil {
		return x.Resources
	}
	return nil
}

type DeleteKubernetesNodePoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *DeleteKubernetesNodePoolRequest) Reset() {
	*x = DeleteKubernetesNodePoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKubernetesNodePoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKubernetesNodePoolRequest) ProtoMessage() {}

func (x *DeleteKubernetesNodePoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKubernetesNodePoolRequest.ProtoReflect.Descriptor instead.
func (*DeleteKubernetesNodePoolRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_resources_kubernetes_node_pool_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteKubernetesNodePoolRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type CloudSpecificKubernetesNodePoolArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonParameters  *common.CloudSpecificResourceCommonArgs `protobuf:"bytes,1,opt,name=common_parameters,json=commonParameters,proto3" json:"common_parameters,omitempty"`
	Name              string                                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SubnetIds         []string                                `protobuf:"bytes,3,rep,name=subnet_ids,json=subnetIds,proto3" json:"subnet_ids,omitempty"`
	ClusterId         string                                  `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	IsDefaultPool     bool                                    `protobuf:"varint,5,opt,name=is_default_pool,json=isDefaultPool,proto3" json:"is_default_pool,omitempty"`
	StartingNodeCount int32                                   `protobuf:"varint,6,opt,name=starting_node_count,json=startingNodeCount,proto3" json:"starting_node_count,omitempty"`
	MinNodeCount      int32                                   `protobuf:"varint,7,opt,name=min_node_count,json=minNodeCount,proto3" json:"min_node_count,omitempty"`
	MaxNodeCount      int32                                   `protobuf:"varint,8,opt,name=max_node_count,json=maxNodeCount,proto3" json:"max_node_count,omitempty"`
	VmSize            common.VmSize_Enum                      `protobuf:"varint,9,opt,name=vm_size,json=vmSize,proto3,enum=dev.multy.common.VmSize_Enum" json:"vm_size,omitempty"`
	DiskSizeGb        int64                                   `protobuf:"varint,10,opt,name=disk_size_gb,json=diskSizeGb,proto3" json:"disk_size_gb,omitempty"`
	Labels            map[string]string                       `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CloudSpecificKubernetesNodePoolArgs) Reset() {
	*x = CloudSpecificKubernetesNodePoolArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudSpecificKubernetesNodePoolArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudSpecificKubernetesNodePoolArgs) ProtoMessage() {}

func (x *CloudSpecificKubernetesNodePoolArgs) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudSpecificKubernetesNodePoolArgs.ProtoReflect.Descriptor instead.
func (*CloudSpecificKubernetesNodePoolArgs) Descriptor() ([]byte, []int) {
	return file_api_proto_resources_kubernetes_node_pool_proto_rawDescGZIP(), []int{4}
}

func (x *CloudSpecificKubernetesNodePoolArgs) GetCommonParameters() *common.CloudSpecificResourceCommonArgs {
	if x != nil {
		return x.CommonParameters
	}
	return nil
}

func (x *CloudSpecificKubernetesNodePoolArgs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloudSpecificKubernetesNodePoolArgs) GetSubnetIds() []string {
	if x != nil {
		return x.SubnetIds
	}
	return nil
}

func (x *CloudSpecificKubernetesNodePoolArgs) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *CloudSpecificKubernetesNodePoolArgs) GetIsDefaultPool() bool {
	if x != nil {
		return x.IsDefaultPool
	}
	return false
}

func (x *CloudSpecificKubernetesNodePoolArgs) GetStartingNodeCount() int32 {
	if x != nil {
		return x.StartingNodeCount
	}
	return 0
}

func (x *CloudSpecificKubernetesNodePoolArgs) GetMinNodeCount() int32 {
	if x != nil {
		return x.MinNodeCount
	}
	return 0
}

func (x *CloudSpecificKubernetesNodePoolArgs) GetMaxNodeCount() int32 {
	if x != nil {
		return x.MaxNodeCount
	}
	return 0
}

func (x *CloudSpecificKubernetesNodePoolArgs) GetVmSize() common.VmSize_Enum {
	if x != nil {
		return x.VmSize
	}
	return common.VmSize_UNKNOWN_VM_SIZE
}

func (x *CloudSpecificKubernetesNodePoolArgs) GetDiskSizeGb() int64 {
	if x != nil {
		return x.DiskSizeGb
	}
	return 0
}

func (x *CloudSpecificKubernetesNodePoolArgs) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type CloudSpecificKubernetesNodePoolResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonParameters  *common.CloudSpecificCommonResourceParameters `protobuf:"bytes,1,opt,name=common_parameters,json=commonParameters,proto3" json:"common_parameters,omitempty"`
	Name              string                                        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SubnetIds         []string                                      `protobuf:"bytes,3,rep,name=subnet_ids,json=subnetIds,proto3" json:"subnet_ids,omitempty"`
	ClusterId         string                                        `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	IsDefaultPool     bool                                          `protobuf:"varint,5,opt,name=is_default_pool,json=isDefaultPool,proto3" json:"is_default_pool,omitempty"`
	StartingNodeCount int32                                         `protobuf:"varint,6,opt,name=starting_node_count,json=startingNodeCount,proto3" json:"starting_node_count,omitempty"`
	MinNodeCount      int32                                         `protobuf:"varint,7,opt,name=min_node_count,json=minNodeCount,proto3" json:"min_node_count,omitempty"`
	MaxNodeCount      int32                                         `protobuf:"varint,8,opt,name=max_node_count,json=maxNodeCount,proto3" json:"max_node_count,omitempty"`
	VmSize            common.VmSize_Enum                            `protobuf:"varint,9,opt,name=vm_size,json=vmSize,proto3,enum=dev.multy.common.VmSize_Enum" json:"vm_size,omitempty"`
	DiskSizeGb        int64                                         `protobuf:"varint,10,opt,name=disk_size_gb,json=diskSizeGb,proto3" json:"disk_size_gb,omitempty"`
	Labels            map[string]string                             `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CloudSpecificKubernetesNodePoolResource) Reset() {
	*x = CloudSpecificKubernetesNodePoolResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudSpecificKubernetesNodePoolResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudSpecificKubernetesNodePoolResource) ProtoMessage() {}

func (x *CloudSpecificKubernetesNodePoolResource) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudSpecificKubernetesNodePoolResource.ProtoReflect.Descriptor instead.
func (*CloudSpecificKubernetesNodePoolResource) Descriptor() ([]byte, []int) {
	return file_api_proto_resources_kubernetes_node_pool_proto_rawDescGZIP(), []int{5}
}

func (x *CloudSpecificKubernetesNodePoolResource) GetCommonParameters() *common.CloudSpecificCommonResourceParameters {
	if x != nil {
		return x.CommonParameters
	}
	return nil
}

func (x *CloudSpecificKubernetesNodePoolResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloudSpecificKubernetesNodePoolResource) GetSubnetIds() []string {
	if x != nil {
		return x.SubnetIds
	}
	return nil
}

func (x *CloudSpecificKubernetesNodePoolResource) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *CloudSpecificKubernetesNodePoolResource) GetIsDefaultPool() bool {
	if x != nil {
		return x.IsDefaultPool
	}
	return false
}

func (x *CloudSpecificKubernetesNodePoolResource) GetStartingNodeCount() int32 {
	if x != nil {
		return x.StartingNodeCount
	}
	return 0
}

func (x *CloudSpecificKubernetesNodePoolResource) GetMinNodeCount() int32 {
	if x != nil {
		return x.MinNodeCount
	}
	return 0
}

func (x *CloudSpecificKubernetesNodePoolResource) GetMaxNodeCount() int32 {
	if x != nil {
		return x.MaxNodeCount
	}
	return 0
}

func (x *CloudSpecificKubernetesNodePoolResource) GetVmSize() common.VmSize_Enum {
	if x != nil {
		return x.VmSize
	}
	return common.VmSize_UNKNOWN_VM_SIZE
}

func (x *CloudSpecificKubernetesNodePoolResource) GetDiskSizeGb() int64 {
	if x != nil {
		return x.DiskSizeGb
	}
	return 0
}

func (x *CloudSpecificKubernetesNodePoolResource) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type KubernetesNodePoolResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonParameters *common.CommonResourceParameters           `protobuf:"bytes,1,opt,name=common_parameters,json=commonParameters,proto3" json:"common_parameters,omitempty"`
	Resources        []*CloudSpecificKubernetesNodePoolResource `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *KubernetesNodePoolResource) Reset() {
	*x = KubernetesNodePoolResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesNodePoolResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesNodePoolResource) ProtoMessage() {}

func (x *KubernetesNodePoolResource) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesNodePoolResource.ProtoReflect.Descriptor instead.
func (*KubernetesNodePoolResource) Descriptor() ([]byte, []int) {
	return file_api_proto_resources_kubernetes_node_pool_proto_rawDescGZIP(), []int{6}
}

func (x *KubernetesNodePoolResource) GetCommonParameters() *common.CommonResourceParameters {
	if x != nil {
		return x.CommonParameters
	}
	return nil
}

func (x *KubernetesNodePoolResource) GetResources() []*CloudSpecificKubernetesNodePoolResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

var File_api_proto_resources_kubernetes_node_pool_proto protoreflect.FileDescriptor

var file_api_proto_resources_kubernetes_node_pool_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x1a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x64, 0x65, 0x76,
	0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x4b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c,
	0x41, 0x72, 0x67, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22,
	0x40, 0x0a, 0x1d, 0x52, 0x65, 0x61, 0x64, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x9a, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x4b, 0x75, 0x62,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x41,
	0x72, 0x67, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x42,
	0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x22, 0xee, 0x04, 0x0a, 0x23, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4e, 0x6f,
	0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x41, 0x72, 0x67, 0x73, 0x12, 0x5e, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74,
	0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x69,
	0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61,
	0x78, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x36, 0x0a, 0x07, 0x76, 0x6d, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x06, 0x76, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x6b,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x67, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x64, 0x69, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x47, 0x62, 0x12, 0x5c, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x64, 0x65, 0x76,
	0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x4b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c,
	0x41, 0x72, 0x67, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xfc, 0x04, 0x0a, 0x27, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x63, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4e,
	0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x64, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x64, 0x65, 0x76,
	0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x12,
	0x2e, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x4e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d,
	0x61, 0x78, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x76,
	0x6d, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x56, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x76, 0x6d, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x5f, 0x67, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x53,
	0x69, 0x7a, 0x65, 0x47, 0x62, 0x12, 0x60, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74,
	0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xd1, 0x01, 0x0a, 0x1a, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x57, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x5a, 0x0a, 0x09, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x79, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x4e, 0x6f, 0x64, 0x65, 0x50,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x5c, 0x0a, 0x17, 0x64, 0x65, 0x76, 0x2e, 0x6d, 0x75,
	0x6c, 0x74, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x42, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6d, 0x75, 0x6c, 0x74, 0x79, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x79,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_resources_kubernetes_node_pool_proto_rawDescOnce sync.Once
	file_api_proto_resources_kubernetes_node_pool_proto_rawDescData = file_api_proto_resources_kubernetes_node_pool_proto_rawDesc
)

func file_api_proto_resources_kubernetes_node_pool_proto_rawDescGZIP() []byte {
	file_api_proto_resources_kubernetes_node_pool_proto_rawDescOnce.Do(func() {
		file_api_proto_resources_kubernetes_node_pool_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_resources_kubernetes_node_pool_proto_rawDescData)
	})
	return file_api_proto_resources_kubernetes_node_pool_proto_rawDescData
}

var file_api_proto_resources_kubernetes_node_pool_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_proto_resources_kubernetes_node_pool_proto_goTypes = []interface{}{
	(*CreateKubernetesNodePoolRequest)(nil),              // 0: dev.multy.resources.CreateKubernetesNodePoolRequest
	(*ReadKubernetesNodePoolRequest)(nil),                // 1: dev.multy.resources.ReadKubernetesNodePoolRequest
	(*UpdateKubernetesNodePoolRequest)(nil),              // 2: dev.multy.resources.UpdateKubernetesNodePoolRequest
	(*DeleteKubernetesNodePoolRequest)(nil),              // 3: dev.multy.resources.DeleteKubernetesNodePoolRequest
	(*CloudSpecificKubernetesNodePoolArgs)(nil),          // 4: dev.multy.resources.CloudSpecificKubernetesNodePoolArgs
	(*CloudSpecificKubernetesNodePoolResource)(nil),      // 5: dev.multy.resources.CloudSpecificKubernetesNodePoolResource
	(*KubernetesNodePoolResource)(nil),                   // 6: dev.multy.resources.KubernetesNodePoolResource
	nil,                                                  // 7: dev.multy.resources.CloudSpecificKubernetesNodePoolArgs.LabelsEntry
	nil,                                                  // 8: dev.multy.resources.CloudSpecificKubernetesNodePoolResource.LabelsEntry
	(*common.CloudSpecificResourceCommonArgs)(nil),       // 9: dev.multy.common.CloudSpecificResourceCommonArgs
	(common.VmSize_Enum)(0),                              // 10: dev.multy.common.VmSize.Enum
	(*common.CloudSpecificCommonResourceParameters)(nil), // 11: dev.multy.common.CloudSpecificCommonResourceParameters
	(*common.CommonResourceParameters)(nil),              // 12: dev.multy.common.CommonResourceParameters
}
var file_api_proto_resources_kubernetes_node_pool_proto_depIdxs = []int32{
	4,  // 0: dev.multy.resources.CreateKubernetesNodePoolRequest.resources:type_name -> dev.multy.resources.CloudSpecificKubernetesNodePoolArgs
	4,  // 1: dev.multy.resources.UpdateKubernetesNodePoolRequest.resources:type_name -> dev.multy.resources.CloudSpecificKubernetesNodePoolArgs
	9,  // 2: dev.multy.resources.CloudSpecificKubernetesNodePoolArgs.common_parameters:type_name -> dev.multy.common.CloudSpecificResourceCommonArgs
	10, // 3: dev.multy.resources.CloudSpecificKubernetesNodePoolArgs.vm_size:type_name -> dev.multy.common.VmSize.Enum
	7,  // 4: dev.multy.resources.CloudSpecificKubernetesNodePoolArgs.labels:type_name -> dev.multy.resources.CloudSpecificKubernetesNodePoolArgs.LabelsEntry
	11, // 5: dev.multy.resources.CloudSpecificKubernetesNodePoolResource.common_parameters:type_name -> dev.multy.common.CloudSpecificCommonResourceParameters
	10, // 6: dev.multy.resources.CloudSpecificKubernetesNodePoolResource.vm_size:type_name -> dev.multy.common.VmSize.Enum
	8,  // 7: dev.multy.resources.CloudSpecificKubernetesNodePoolResource.labels:type_name -> dev.multy.resources.CloudSpecificKubernetesNodePoolResource.LabelsEntry
	12, // 8: dev.multy.resources.KubernetesNodePoolResource.common_parameters:type_name -> dev.multy.common.CommonResourceParameters
	5,  // 9: dev.multy.resources.KubernetesNodePoolResource.resources:type_name -> dev.multy.resources.CloudSpecificKubernetesNodePoolResource
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_proto_resources_kubernetes_node_pool_proto_init() }
func file_api_proto_resources_kubernetes_node_pool_proto_init() {
	if File_api_proto_resources_kubernetes_node_pool_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKubernetesNodePoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadKubernetesNodePoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateKubernetesNodePoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKubernetesNodePoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudSpecificKubernetesNodePoolArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudSpecificKubernetesNodePoolResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_resources_kubernetes_node_pool_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesNodePoolResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_resources_kubernetes_node_pool_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_resources_kubernetes_node_pool_proto_goTypes,
		DependencyIndexes: file_api_proto_resources_kubernetes_node_pool_proto_depIdxs,
		MessageInfos:      file_api_proto_resources_kubernetes_node_pool_proto_msgTypes,
	}.Build()
	File_api_proto_resources_kubernetes_node_pool_proto = out.File
	file_api_proto_resources_kubernetes_node_pool_proto_rawDesc = nil
	file_api_proto_resources_kubernetes_node_pool_proto_goTypes = nil
	file_api_proto_resources_kubernetes_node_pool_proto_depIdxs = nil
}
