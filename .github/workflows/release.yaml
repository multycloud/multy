on:
  release:
    types: [created]

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Setup protoc plugins
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1

      - name: Set up protoc
        uses: arduino/setup-protoc@v1

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1.22
        with:
          goversion: "https://go.dev/dl/go1.18.linux-amd64.tar.gz"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          asset_name: multy-${{ matrix.goos }}-${{ matrix.goarch }}
          extra_files: LICENSE README.md
          overwrite: TRUE
          pre_command: "make build"
          ldflags: "-X 'multy/cli.Version=${{ steps.get_version.outputs.VERSION }}'"